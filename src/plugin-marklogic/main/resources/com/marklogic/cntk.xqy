xquery version "1.0-ml";
(:~
 : MarkLogic cntk functions
 :
 : @see https://docs.marklogic.com/cntk
 :)
module namespace cntk = "http://marklogic.com/cntk";

declare namespace a = "http://reecedunn.co.uk/xquery/annotations";
declare namespace o = "http://reecedunn.co.uk/xquery/options";

declare option o:requires "marklogic/10.0";
declare option o:removed "marklogic/10.0-5";

declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ROI-pooling($operand as cntk:variable, $rois as cntk:variable, $pooling-type as xs:string, $roi-output-shape as cntk:shape, $spatial-scale as xs:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:abs($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:abs($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:acos($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:acos($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-delta-learner($parameters as cntk:parameter*, $lr as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-delta-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $rho as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-delta-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $rho as xs:double, $epsilon as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-delta-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $rho as xs:double, $epsilon as xs:double, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $need-ave-multiplier as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $need-ave-multiplier as xs:boolean, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule, $epsilon as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule, $epsilon as xs:double, $adamax as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:adam-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule, $epsilon as xs:double, $adamax as xs:boolean, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:alias($operands as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:alias($operands as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:all-axes() as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:all-static-axes() as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:argmax($operand as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:argmax($operand as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:argmin($operand as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:argmin($operand as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:as-block($composite as cntk:function, $arguments-map as json:array, $block-op-name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:as-block($composite as cntk:function, $arguments-map as json:array, $block-op-name as xs:string, $block-name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:as-composite($root-function as cntk:function) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:as-composite($root-function as cntk:function, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:asin($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:asin($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:asinh($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:asinh($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:assign($ref as cntk:variable, $input as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:assign($ref as cntk:variable, $input as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:atan($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:atan($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:atanh($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:atanh($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:average-pooling-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis($axis-index as xs:integer) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-is-batch($axis as cntk:axis) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-is-dynamic($axis as cntk:axis) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-is-ordered($axis as cntk:axis) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-is-sequence($axis as cntk:axis) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-is-static($axis as cntk:axis) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-name($axis as cntk:axis) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-static-index($axis as cntk:axis) as xs:integer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:axis-static-index($axis as cntk:axis) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch($shape as cntk:shape, $data as json:array) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch($shape as cntk:shape, $data as json:array, $device as cntk:device) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch($shape as cntk:shape, $data as json:array, $device as cntk:device, $data-type as xs:string) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch($shape as cntk:shape, $data as json:array, $device as cntk:device, $data-type as xs:string, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-normalization($operand as cntk:variable, $scale as cntk:variable, $bias as cntk:variable, $running-mean as cntk:variable, $running-inv-std as cntk:variable, $running-count as cntk:variable, $spatial as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-normalization($operand as cntk:variable, $scale as cntk:variable, $bias as cntk:variable, $running-mean as cntk:variable, $running-inv-std as cntk:variable, $running-count as cntk:variable, $spatial as xs:boolean, $map as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-normalization-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-of-sequences($shape as cntk:shape, $data as json:array, $sequence-start-flags as xs:boolean*) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-of-sequences($shape as cntk:shape, $data as json:array, $sequence-start-flags as xs:boolean*, $device as cntk:device) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-of-sequences($shape as cntk:shape, $data as json:array, $sequence-start-flags as xs:boolean*, $device as cntk:device, $data-type as xs:string) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:batch-of-sequences($shape as cntk:shape, $data as json:array, $sequence-start-flags as xs:boolean*, $device as cntk:device, $data-type as xs:string, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random($shape as cntk:shape, $data-type as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random-like($x as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random-like($x as cntk:variable, $mean as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random-like($x as cntk:variable, $mean as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bernoulli-random-like($x as cntk:variable, $mean as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:bilinear-initializer($kernel-width as xs:unsignedLong, $kernel-height as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:binary-cross-entropy($prediction as cntk:variable, $targets as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:binary-cross-entropy($prediction as cntk:variable, $targets as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:broadcast-as($operand as cntk:variable, $broadcast-as as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ceil($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ceil($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:classification-error($output_vector as cntk:variable, $target_vector as cntk:variable, $top-n as xs:unsignedLong, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:classification-error($output_vector as cntk:variable, $target_vector as cntk:variable, $top-n as xs:unsignedLong, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:clip($operand as cntk:variable, $min as cntk:variable, $max as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:combine($operands as cntk:variable*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:combine($operands as cntk:variable*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:concatenate-shape($shape1 as cntk:shape, $shape2 as cntk:shape) as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant($shape as cntk:shape, $data-type as xs:string, $init as xs:double) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant($shape as cntk:shape, $data-type as xs:string, $init as xs:double, $device as cntk:device) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant($shape as cntk:shape, $data-type as xs:string, $init as xs:double, $device as cntk:device, $name as xs:string) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-clone-as($constant as cntk:constant, $data-type as cntk:data-type) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-from-value($value as cntk:value) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-from-value($value as cntk:value, $name as xs:string) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-initializer($value as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-record-value-update() as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-set-value($constant as cntk:constant, $value as cntk:value) as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:constant-value($constant as cntk:constant) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution($convolution-map as cntk:variable, $operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-1d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-2d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-3d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose($convolution-map as cntk:variable, $operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose-1d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose-2d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose-3d-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:convolution-transpose-with-explicit-padding($convolution-map as cntk:variable, $operand as cntk:variable, $strides as cntk:shape, $sharing as xs:boolean*, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, $output-shape as cntk:shape, $dilation as cntk:shape, $max-temp-mem-size-in-samples as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cos($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cos($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosh($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosh($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosine-distance($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosine-distance($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosine-distance-with-negative-samples($left-operand as cntk:variable, $right-operand as cntk:variable, $shift-window as xs:integer, $number-of-negative-samples as xs:integer) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cosine-distance-with-negative-samples($left-operand as cntk:variable, $right-operand as cntk:variable, $shift-window as xs:integer, $number-of-negative-samples as xs:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cpu() as cntk:device external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cross-entropy-with-softmax($output_vector as cntk:variable, $target_vector as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:cross-entropy-with-softmax($output_vector as cntk:variable, $target_vector as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:custom-proxy-op($operands as cntk:variable*, $output-shape as cntk:shape, $output-type as cntk:type, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:default-batch-axis() as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:default-device() as cntk:device external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:default-input-ariable-dynamic-axes() as cntk:axis* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dense-layer($operand as cntk:variable, $addition-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:depth-to-space($operand as cntk:variable, $block-size as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dropout($x as cntk:variable, $droupout-rate as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dropout($x as cntk:variable, $droupout-rate as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dropout($x as cntk:variable, $droupout-rate as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dropout-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dynamic-axis($name as xs:string) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:dynamic-axis($name as xs:string, $is-ordered-dynamic-axis as xs:boolean) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:edit-distance-error($prediction as cntk:variable, $labels as cntk:variable, $substitution-penalty as xs:float, $deletion-penalty as xs:float, $insertion-penalty as xs:float, $squash-inputs as xs:boolean, $tokens-to-ignore as xs:integer*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:edit-distance-error($prediction as cntk:variable, $labels as cntk:variable, $substitution-penalty as xs:float, $deletion-penalty as xs:float, $insertion-penalty as xs:float, $squash-inputs as xs:boolean, $tokens-to-ignore as xs:integer*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-and($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-and($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-divide($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-divide($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-max($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-min($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-min($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-not($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-not($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-or($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-or($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-select($condition as cntk:variable, $then-operand as cntk:variable, $else-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-select($condition as cntk:variable, $then-operand as cntk:variable, $else-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-times($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-times($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:element-xor($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:elu($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:elu($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:elu-with-alpha($x as cntk:variable, $alpha as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:elu-with-alpha($x as cntk:variable, $alpha as xs:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:embedding-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:end-static-axis() as cntk:axis external;
declare %a:since("marklogic", "10.0-3") function cts:entity-highlight($node as node(), $expr as item()*) as node() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:equal($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:equal($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:evaluate($model as cntk:function, $input-variable-value-map as json:array, $output-variables as cntk:variable*) as cntk:value* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:evaluate($model as cntk:function, $input-variable-value-map as json:array, $output-variables as cntk:variable*, $device as cntk:device) as cntk:value* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:exp($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:exp($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:expand-dims($operand as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:eye-like($x as cntk:variable, $is-output-sparse as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:flatten($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:flatten-on-axis($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:floor($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:floor($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:forward-backward($graph as cntk:variable, $features as cntk:variable, $blank-to-token-id as xs:unsignedLong, $delay-constraint as cntk:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:fs-ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:fs-ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:fs-ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:fs-ada-grad-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $variance-momentum-schedule as cntk:schedule, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function($node as binary) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function($node as binary, $device as cntk:device) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function($node as binary, $device as cntk:device, $format as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-arguments($model as cntk:function) as cntk:variable* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-arguments($model as cntk:function, $rowMajor as xs:boolean) as cntk:variable* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-constants($model as cntk:function) as cntk:constant* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-from-variable($variable as cntk:variable) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-is-block($model as cntk:function) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-is-composite($model as cntk:function) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-is-primitive($model as cntk:function) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-name($model as cntk:function) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-op-name($model as cntk:function) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-output($model as cntk:function) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-outputs($model as cntk:function) as cntk:variable* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-parameters($model as cntk:function) as cntk:parameter* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:function-save($function as cntk:function) as document-node() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:future-value($x as cntk:variable, $initial-state as cntk:variable, $offset as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gather-op($indices as cntk:variable, $reference as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gather-op($indices as cntk:variable, $reference as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gather-op-on-axis($indices as cntk:variable, $reference as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gather-op-on-axis($indices as cntk:variable, $reference as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:global-average-pooling-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:global-max-pooling-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-normal-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-normal-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-normal-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsinged-long) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-uniform-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-uniform-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-uniform-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-uniform-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:glorot-uniform-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gpu($device-id as xs:unsigned) as cntk:device external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:greater($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:greater($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:greater-equal($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:greater-equal($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-block($dh as cntk:variable, $x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-layer($x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant, $return-full-state as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gru-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant, $return-full-state as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random($shape as cntk:shape, $data-type as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random($shape as cntk:shape, $data-type as xs:string, $loc as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random($shape as cntk:shape, $data-type as xs:string, $loc as xs:double, $scale as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random($shape as cntk:shape, $data-type as xs:string, $loc as xs:double, $scale as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random($shape as cntk:shape, $data-type as xs:string, $loc as xs:double, $scale as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random-like($x as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random-like($x as cntk:variable, $loc as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random-like($x as cntk:variable, $loc as xs:double, $scale as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random-like($x as cntk:variable, $loc as xs:double, $scale as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:gumbel-random-like($x as cntk:variable, $loc as xs:double, $scale as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:hard-sigmoid($operand as cntk:variable, $alpha as xs:float, $beta as xs:float) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:hard-sigmoid($operand as cntk:variable, $alpha as xs:float, $beta as xs:float, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:hardmax($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:hardmax($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-normal-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-normal-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-normal-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-uniform-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-uniform-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-uniform-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-uniform-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:he-uniform-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:image-scaler($x as cntk:variable, $scaler as xs:float, $biases as xs:float*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:input-variable($shape as cntk:shape, $data-type as xs:string) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:input-variable($shape as cntk:shape, $data-type as xs:string, $is-sparse as xs:boolean) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:input-variable($shape as cntk:shape, $data-type as xs:string, $is-sparse as xs:boolean, $needs-gradient as xs:boolean) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:input-variable($shape as cntk:shape, $data-type as xs:string, $is-sparse as xs:boolean, $needs-gradient as xs:boolean, $name as xs:string) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:input-variable($shape as cntk:shape, $data-type as xs:string, $is-sparse as xs:boolean, $needs-gradient as xs:boolean, $name as xs:string, $dynamic-axes as cntk:axis*) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:label-layer($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:labels-to-graph($labels as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lambda-rank($output as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lambda-rank($output as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lattice-sequence-with-softmax($labels as cntk:variable, $prediction as cntk:variable, $scaled-log-likelihood as cntk:variable, $lattice as xs:variable, $map as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:layer-normalization-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:leaky-re-lu($x as cntk:variable, $alpha as cntk:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:leaky-re-lu($x as cntk:variable, $alpha as cntk:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-constant($learning-rate as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-constant($learning-rate as xs:double, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-pairs($pairs as json:array) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-pairs($pairs as json:array, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-pairs($pairs as json:array, $epoch-size as xs:unsignedLong, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-sequence($learning-rates as xs:double*) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-sequence($learning-rates as xs:double*, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:learning-rate-schedule-from-sequence($learning-rates as xs:double*, $epoch-size as xs:unsignedLong, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:less($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:less($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:less-equal($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:less-equal($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:local-response-normalization($operand as cntk:variable, $depth-radius as xs:unsignedLong, $bias as xs:double, $alpha as xs:double, $beta as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:local-response-normalization($operand as cntk:variable, $depth-radius as xs:unsignedLong, $bias as xs:double, $alpha as xs:double, $beta as xs:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-add-exp($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-add-exp($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-softmax($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-softmax($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-softmax-on-axis($operand as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:log-softmax-on-axis($operand as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-block($dh as cntk:variable, $dc as cntk:variable, $x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-layer($x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*, $return-full-state as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:lstm-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*, $return-full-state as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:max-pooling-layer($operand as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:max-unpooling-layer($operand1 as cntk:variable, $operand2 as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean($operands as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean($operands as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean-variance-normalization($operand as cntk:variable, $epsilon as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean-variance-normalization($operand as cntk:variable, $epsilon as xs:double, $use-stats-across-channels as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean-variance-normalization($operand as cntk:variable, $epsilon as xs:double, $use-stats-across-channels as xs:boolean, $do-variance-scaling as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:mean-variance-normalization($operand as cntk:variable, $epsilon as xs:double, $use-stats-across-channels as xs:boolean, $do-variance-scaling as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minibatch-size-schedule-from-constant($minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minibatch-size-schedule-from-pairs($pairs as json:array) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minibatch-size-schedule-from-pairs($pairs as json:array, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minibatch-size-schedule-from-sequence($minibatch-sizes as xs:unsignedLong*) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minibatch-size-schedule-from-sequence($minibatch-sizes as xs:unsignedLong*, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minus($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:minus($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-constant($momentum as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-constant($momentum as xs:double, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-pairs($pairs as json:array) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-pairs($pairs as json:array, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-pairs($pairs as json:array, $epoch-size as xs:unsignedLong, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-sequence($momentum as xs:double*) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-sequence($momentum as xs:double*, $epoch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-schedule-from-sequence($momentum as xs:double*, $epoch-size as xs:unsignedLong, $minibatch-size as xs:unsignedLong) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-sgd-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule) as cntk:learner external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-sgd-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean) as cntk:learner external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:momentum-sgd-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $alo as map:map) as cntk:learner external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ndcgat1($prediction as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ndcgat1($prediction as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:negate($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:negate($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:nesterov-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:nesterov-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:nesterov-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, $unit-gain as xs:boolean, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:new-unique-dynamic-axis($name as cntk:shape) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:new-unique-dynamic-axis($name as cntk:shape, $is-ordered-dynamic-axis as cntk:shape) as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random($shape as cntk:shape, $data-type as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double, $scale as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double, $scale as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random($shape as cntk:shape, $data-type as xs:string, $mean as xs:double, $scale as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random-like($x as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random-like($x as cntk:variable, $mean as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random-like($x as cntk:variable, $mean as xs:double, $scale as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random-like($x as cntk:variable, $mean as xs:double, $scale as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:normal-random-like($x as cntk:variable, $mean as xs:double, $scale as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:not-equal($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:not-equal($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:one-hot-op($x as cntk:variable, $num-class as xs:unsignedLong, $output-sparse as xs:boolean, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:one-hot-op($x as cntk:variable, $num-class as xs:unsignedLong, $output-sparse as xs:boolean, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:ones-like($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:operand-sequence-axis() as cntk:axis external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:optimized-rnnstack($operand as cntk:variable, $weights as xs:double, $hidden-size as xs:unsignedLong, $num-layers as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:optimized-rnnstack($operand as cntk:variable, $weights as xs:double, $hidden-size as xs:unsignedLong, $num-layers as xs:unsignedLong, $bidirectional as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:optimized-rnnstack($operand as cntk:variable, $weights as xs:double, $hidden-size as xs:unsignedLong, $num-layers as xs:unsignedLong, $bidirectional as xs:boolean, $recurrent-op as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:optimized-rnnstack($operand as cntk:variable, $weights as xs:double, $hidden-size as xs:unsignedLong, $num-layers as xs:unsignedLong, $bidirectional as xs:boolean, $recurrent-op as xs:string, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:output-variable($shape as cntk:shape, $data-type as xs:string, $dynamic-axes as cntk:axis*) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:output-variable($shape as cntk:shape, $data-type as xs:string, $dynamic-axes as cntk:axis*, $needs-gradient as xs:boolean) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:output-variable($shape as cntk:shape, $data-type as xs:string, $dynamic-axes as cntk:axis*, $needs-gradient as xs:boolean, $name as xs:string) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pad($x as cntk:variable, $mode as xs:string, $head as xs:unsignedLong*, $foot as xs:unsignedLong*, $constant-value as xs:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter($shape as cntk:shape, $data-type as xs:string, $init as cntk:initializer) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter($shape as cntk:shape, $data-type as xs:string, $init as cntk:initializer, $device as cntk:device) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter($shape as cntk:shape, $data-type as xs:string, $init as cntk:initializer, $device as cntk:device, $name as xs:string) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-from-scalar($shape as cntk:shape, $data-type as xs:string, $init as xs:double) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-from-scalar($shape as cntk:shape, $data-type as xs:string, $init as xs:double, $device as cntk:device) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-from-scalar($shape as cntk:shape, $data-type as xs:string, $init as xs:double, $device as cntk:device, $name as xs:string) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-from-value($value as cntk:value) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-from-value($value as cntk:value, $name as xs:string) as cntk:parameter external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-record-value-update() as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-set-value($parameter as cntk:parameter, $value as cntk:value) as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:parameter-value($parameter as cntk:parameter) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:past-value($x as cntk:variable, $initial-state as cntk:variable, $offset as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:per-dim-mean-variance-normalize($operand as cntk:variable, $mean as cntk:variable, $inv-std-dev as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:per-dim-mean-variance-normalize($operand as cntk:variable, $mean as cntk:variable, $inv-std-dev as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:placeholder-variable() as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:placeholder-variable($shape as cntk:shape) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:placeholder-variable($shape as cntk:shape, $data-type as xs:string) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:placeholder-variable($shape as cntk:shape, $data-type as xs:string, $name as xs:string) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:placeholder-variable($shape as cntk:shape, $data-type as xs:string, $name as xs:string, $dynamic-axes as cntk:axis*) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:plus($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:plus($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*, $ceil-out-dim as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*, $ceil-out-dim as xs:boolean, $include-pad as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*, $ceil-out-dim as xs:boolean, $include-pad as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling-with-explicit-padding($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling-with-explicit-padding($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, $ceil-out-dim as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling-with-explicit-padding($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, $ceil-out-dim as xs:boolean, $include-pad as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pooling-with-explicit-padding($operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, $ceil-out-dim as xs:boolean, $include-pad as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pow($left-operand as cntk:variable, $right-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pow($left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pre-lu($alpha as cntk:variable, $operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:pre-lu($alpha as cntk:variable, $operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:previous-minibatch-evaluation-average($trainer as cntk:trainer) as xs:double external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:previous-minibatch-loss-average($trainer as cntk:trainer) as xs:double external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:previous-minibatch-sample-count($trainer as cntk:trainer) as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-initializer-with-rank($initializer as cntk:initializer, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample-inclusion-frequency($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample-inclusion-frequency($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:random-sample-inclusion-frequency($weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reciprocal($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reciprocal($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reconcile-dynamic-axes($x as cntk:variable, $axes-as-operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reconcile-dynamic-axes($x as cntk:variable, $axes-as-operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l1($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l1($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l1($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l2($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l2($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-l2($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-log-sum($x as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-log-sum($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-log-sum-on-axes($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-log-sum-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-log-sum-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-max($x as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-max($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-max-on-axes($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-max-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-max-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-mean($x as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-mean($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-mean-on-axes($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-mean-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-mean-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-min($x as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-min($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-min-on-axes($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-min-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-min-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-prod($x as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-prod($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-prod-on-axes($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-prod-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-prod-on-axes($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum($operand as cntk:variable, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum($operand as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-on-axes($operand as cntk:variable, $axis as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-on-axes($operand as cntk:variable, $axis as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-on-axes($operand as cntk:variable, $axis as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-square($x as cntk:variable, $axes as cntk:axis*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-square($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reduce-sum-square($x as cntk:variable, $axes as cntk:axis*, $keep-dims as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:relu($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:relu($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reshape($x as cntk:variable, $replacement-shape as cntk:shape, $begin-axis as cntk:axis, $end-axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:reshape($x as cntk:variable, $replacement-shape as cntk:shape, $begin-axis as cntk:axis, $end-axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rms-prop-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $gamma as xs:double, $inc as xs:double, $dec as xs:double, $max as xs:double, $min as xs:double) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rms-prop-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $gamma as xs:double, $inc as xs:double, $dec as xs:double, $max as xs:double, $min as xs:double, $unit-gain as xs:boolean) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rms-prop-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $gamma as xs:double, $inc as xs:double, $dec as xs:double, $max as xs:double, $min as xs:double, $unit-gain as xs:boolean, $alo as map:map) as cntk:schedule external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-block($dh as cntk:variable, $x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-layer($x as cntk:variable, $additional-parameters as map:map) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*, $return-full-state as xs:boolean) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:rnn-step-layer($x as cntk:variable, $additional-parameters as map:map, $go-backwards as xs:boolean, $initial-states as cntk:constant*, $return-full-state as xs:boolean, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:round($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:round($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:scalar($data-type as xs:string, $value as xs:double) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:scalar($data-type as xs:string, $value as xs:double, $device as cntk:device) as cntk:constant external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:selu($x as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:selu($x as cntk:variable, $scale as cntk:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:selu($x as cntk:variable, $scale as cntk:double, $alpha as cntk:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:selu($x as cntk:variable, $scale as cntk:double, $alpha as cntk:double, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence($shape as cntk:shape, $data as json:array, $sequence-start-flag as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence($shape as cntk:shape, $data as json:array, $sequence-start-flag as xs:boolean, $device as cntk:device) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence($shape as cntk:shape, $data as json:array, $sequence-start-flag as xs:boolean, $device as cntk:device, $data-type as xs:string) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence($shape as cntk:shape, $data as json:array, $sequence-start-flag as xs:boolean, $device as cntk:device, $data-type as xs:string, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-delay($x as cntk:variable, $initial-state as cntk:variable, $time-step as xs:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-first($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-gather($operand as cntk:variable, $condition as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-gather-with-factor($operand as cntk:variable, $condition as cntk:variable, $factor as json:array, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-is-first($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-is-last($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-last($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-reduce-max($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-reduce-sum($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-scatter($seq as cntk:variable, $condition as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-scatter-with-factor($operand as cntk:variable, $condition as cntk:variable, $factor as json:array, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-slice($operand as cntk:variable, $begin-index as cntk:integer, $end-index as cntk:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-softmax($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-unpack($x as cntk:variable, $padding-value as cntk:variable, $supress-mask-output as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sequence-where($condition as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sgd-learner($parameters as cntk:parameter*, $lr as cntk:schedule) as cntk:learner external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sgd-learner($parameters as cntk:parameter*, $lr as cntk:schedule, $alo as map:map) as cntk:learner external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape() as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape($dimensions as xs:unsignedLong*) as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-dimensions($shape as cntk:shape) as xs:unsignedLong* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-free-dimension() as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-has-free-dimension($shape as cntk:shape) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-has-inferred-dimension($shape as cntk:shape) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-has-unbound-dimension($shape as cntk:shape) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-inferred-dimension() as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-is-scalar($shape as cntk:shape) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-is-unknown($shape as cntk:shape) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-rank($shape as cntk:shape) as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:shape-total-size($shape as cntk:shape) as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sigmoid($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sigmoid($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sin($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sin($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sinh($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sinh($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:slice($operand as cntk:variable, $axis as xs:axis*, $begin-index as xs:integer*, $end-index as xs:integer*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:slice-with-strides($x as cntk:variable, $axis as xs:axis*, $begin-index as xs:integer*, $end-index as xs:integer*, $strides as xs:integer*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0")
        %a:until("marklogic", "10.0-3", "cntk:softplus#2") function cntk:soft-plus($x as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0")
        %a:until("marklogic", "10.0-3", "cntk:softsign#2") function cntk:soft-sign($x as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:softmax($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:softmax($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:softmax-on-axis($x as cntk:variable, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0-3") function cntk:softplus($x as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0-3") function cntk:softsign($x as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:space-to-depth($operand as cntk:variable, $block-size as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:splice($inputs as cntk:variable*, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sqrt($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sqrt($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:square($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:square($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:squared-error($output as cntk:variable, $targets as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:squared-error($output as cntk:variable, $targets as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:squeeze($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:squeeze-axes($operand as cntk:variable, $axes as cntk:axis*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:stop-gradient($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:stop-gradient($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:straight-through($input as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:straight-through($input as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:subshape($shape as cntk:shape, $begin-axis-id as xs:unsignedLong, $end-axis-id as xs:unsignedLong) as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sum($operands as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:sum($operands as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:tan($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:tanh($operand as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:tanh($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:times($left-operand as cntk:variable, $right-operand as cntk:variable, $output-rank as xs:integer, $infer-input-rank-to-map as xs:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:to-batch($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:to-sequence($x as cntk:variable, $sequence-axis-name-prefix as xs:string, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:to-sequence-like($x as cntk:variable, $dynamic-axes-like as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:to-sequence-with-lengths($x as cntk:variable, $sequence-lengths as xs:variable, $sequence-axis-name-prefix as xs:string, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:top-k($operand as cntk:variable, $k as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:top-k($operand as cntk:variable, $k as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:top-k-on-axis($operand as cntk:variable, $k as xs:unsignedLong, $axis as cntk:axis) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:top-k-on-axis($operand as cntk:variable, $k as xs:unsignedLong, $axis as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:total-number-of-sample-seen($trainer as cntk:trainer) as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:train-minibatch($trainer as cntk:trainer, $variable-value-map as json:array) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:train-minibatch($trainer as cntk:trainer, $variable-value-map as json:array, $is-sweep-end as xs:boolean) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:train-minibatch($trainer as cntk:trainer, $variable-value-map as json:array, $is-sweep-end as xs:boolean, $device as cntk:device) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:trainer($model as cntk:function, $learners as cntk:learner*, $loss-function as cntk:function) as cntk:trainer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:trainer($model as cntk:function, $learners as cntk:learner*, $loss-function as cntk:function, $evaluate-function as cntk:function) as cntk:trainer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:trainer-get-model($trainer as cntk:trainer) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:transpose($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:transpose-axes($operand as cntk:variable, $axis1 as cntk:axis, $axis2 as cntk:axis, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:transpose-on-axes($x as cntk:variable*, $permutation as cntk:axis*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:transpose-times($left-operand as cntk:variable, $right-operand as cntk:variable, $output-rank as xs:integer, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:truncated-normal-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:truncated-normal-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:truncated-normal-initializer($scale as xs:double, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-initializer($scale as xs:double, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random($shape as cntk:shape, $data-type as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random($shape as cntk:shape, $data-type as xs:string, $low as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random($shape as cntk:shape, $data-type as xs:string, $low as xs:double, $high as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random($shape as cntk:shape, $data-type as xs:string, $low as xs:double, $high as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random($shape as cntk:shape, $data-type as xs:string, $low as xs:double, $high as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random-like($x as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random-like($x as cntk:variable, $low as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random-like($x as cntk:variable, $low as xs:double, $high as xs:double) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random-like($x as cntk:variable, $low as xs:double, $high as xs:double, $seed as xs:unsignedLong) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:uniform-random-like($x as cntk:variable, $low as xs:double, $high as xs:double, $seed as xs:unsignedLong, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unknown-dynamic-axes() as cntk:axis* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unknown-shape() as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unpack-batch($operand as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unpooling($operand as cntk:variable, $poolingInput as cntk:variable, $unpooling-type as xs:string, $unpooling-window-shape as cntk:shape) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unpooling($operand as cntk:variable, $poolingInput as cntk:variable, $unpooling-type as xs:string, $unpooling-window-shape as cntk:shape, $strides as cntk:shape) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unpooling($operand as cntk:variable, $poolingInput as cntk:variable, $unpooling-type as xs:string, $unpooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:unpooling($operand as cntk:variable, $poolingInput as cntk:variable, $unpooling-type as xs:string, $unpooling-window-shape as cntk:shape, $strides as cntk:shape, $auto-padding as xs:boolean*, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value($shape as cntk:shape, $data as json:array) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value($shape as cntk:shape, $data as json:array, $device as cntk:device) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value($shape as cntk:shape, $data as json:array, $device as cntk:device, $data-type as xs:string) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value($shape as cntk:shape, $data as json:array, $device as cntk:device, $data-type as xs:string, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-alias($value as cntk:value, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-copy-from($value as cntk:value, $source-value as cntk:value) as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-data-type($value as cntk:value) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-deep-clone($value as cntk:value, $read-only as xs:boolean) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-device($value as cntk:value) as cntk:device external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-erase($value as cntk:value) as empty-sequence() external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-is-readonly($value as cntk:value) as xs:boolean* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-is-valid($value as cntk:value) as xs:boolean* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-shape($value as cntk:value) as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:value-to-array($variable as cntk:variable, $value as cntk:value) as json:array external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-as-string($variable as cntk:variable) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-current-value-time-stamp($variable as cntk:variable) as xs:unsignedLong external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-data-type($variable as cntk:variable) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-dynamic-axes($variable as cntk:variable) as cntk:axis* external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-from-function($function as cntk:function) as cntk:variable external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-has-batch-axis($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-has-sequence-axis($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-constant($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-initialized($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-input($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-output($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-parameter($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-placeholder($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-is-sparse($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-kind($variable as cntk:variable) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-name($variable as cntk:variable) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-needs-gradient($variable as cntk:variable) as xs:boolean external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-owner($variable as cntk:variable) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-shape($variable as cntk:variable) as cntk:shape external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-uid($variable as cntk:variable) as xs:string external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:variable-value($variable as cntk:variable) as cntk:value external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:weighted-binary-cross-entropy($output as cntk:variable, $targets as cntk:variable, $weights as cntk:variable, $name as xs:string) as cntk:function external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:xavier-initializer() as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:xavier-initializer($scale as xs:double) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:xavier-initializer($scale as xs:double, $output-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:xavier-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:xavier-initializer($scale as xs:double, $output-rank as xs:integer, $filter-rank as xs:integer, $seed as xs:unsignedLong) as cntk:initializer external;
declare %a:since("marklogic", "10.0") %a:until("marklogic", "10.0-5") function cntk:zeros-like($operand as cntk:variable, $name as xs:string) as cntk:function external;
