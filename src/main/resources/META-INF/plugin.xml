<!--suppress XmlUnboundNsPrefix -->
<idea-plugin version="2">
  <id>uk.co.reecedunn.intellij.plugin.xquery</id>
  <name>xquery-intellij-plugin</name>
  <version>VERSION</version>
  <vendor email="msclrhd@gmail.com" url="http://reecedunn.co.uk">Reece H. Dunn</vendor>

  <description><![CDATA[
    XQuery 1.0, 3.0 and 3.1 language support including Update Facility 1.0
    and 3.0, and Scripting Extension 1.0. Supports the BaseX, MarkLogic and
    Saxonica XQuery vendor extensions, and MarkLogic 1.0-ml XQuery syntax.
  ]]></description>

  <change-notes><![CDATA[
    <h3>Release 0.6-dev:</h3>
    <p>Language Support:</p>
    <ol>
      <li>MarkLogic 7.0 and 8.0 schema-components <code>KindType</code> tests.</li>
      <li>Saxon 9.8 <code>tuple</code> and <code>union</code> types.</li>
      <li>Recover when <code>=</code> is used instead of <code>:=</code>.</li>
      <li>Improved multi-statement expression parsing and error reporting for MarkLogic 6.0, and W3C Scripting XQuery extensions.</li>
    </ol>
    <p>Bug Fixes:</p>
    <ol>
      <li>Fix tokenizing <code>`{...}`</code> expressions outside XQuery 3.1 string interpolation contexts.</li>
      <li>Report a parser error when a TypedFunctionTest does not have a return type clause.</li>
      <li>Fix resolving functions referenced in the current library module.</li>
      <li>Fix support for ProcessCanceledException thrown when creating PSI nodes.</li>
    </ol>
    <p>Inspections:</p>
    <ol>
      <li>XPST0003: Final statement semicolon inspection for MarkLogic and Scripting Extension syntax differences.</li>
      <li>XPST0003: Reserved function inspection. This is split out from the unsupported construct inspection.</li>
      <li>XPST0003: Saxon/XQuery map key-value separators. This is split out from the unsupported construct inspection.</li>
      <li>XPST0017: Undefined function inspection. This is experimental, as it currently reports many false positives.</li>
      <li>XQST0031: Extend the inspection to check unsupported XQuery versions in different MarkLogic transactions, and check for XDMP-XQUERYVERSIONSWITCH errors.</li>
      <li>XQST0033: Duplicate namespace prefix.</li>
      <li>XPST0081: Unbound QName prefix.</li>
    </ol>
    <p>IntelliJ Integration:</p>
    <ol>
      <li>Moved the MarkLogic run configuration to a separate plugin.</li>
    </ol>
  ]]></change-notes>

  <idea-version since-build="161"/>

  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.xml</depends>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="uk.co.reecedunn.intellij.plugin.xquery.filetypes.FileTypeFactory"/>

    <lang.syntaxHighlighterFactory language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.lexer.SyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="uk.co.reecedunn.intellij.plugin.xquery.settings.ColorSettingsPage"/>

    <lang.ast.factory language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.parser.XQueryASTFactory"/>
    <lang.parserDefinition language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.parser.XQueryParserDefinition"/>
    <lang.findUsagesProvider language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.findUsages.XQueryFindUsagesProvider"/>

    <lang.braceMatcher language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.editor.XQueryPairedBraceMatcher"/>
    <lang.commenter language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.editor.XQueryCommenter"/>
    <lang.foldingBuilder language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.editor.XQueryFoldingBuilder"/>

    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryUriLiteralPsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.resolve.manipulator.XQueryUriLiteralManipulator"/>
    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryQNamePsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.resolve.manipulator.XQueryQNameManipulator"/>
    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryEQNamePsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.resolve.manipulator.XQueryEQNameManipulator"/>

    <annotator language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.annotation.QNameAnnotator"/>

    <!-- XPST0003 -->
    <localInspection language="XQuery" shortName="FinalStatementSemicolon" bundle="messages.XQueryBundle"
                     key="inspection.XPST0003.final-statement-semicolon.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0003.FinalStatementSemicolonInspection"/>
    <localInspection language="XQuery" shortName="MapConstructorEntry" bundle="messages.XQueryBundle"
                     key="inspection.XPST0003.map-constructor-entry.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0003.MapConstructorEntryInspection"/>
    <localInspection language="XQuery" shortName="PredefinedEntityRef" bundle="messages.XQueryBundle"
                     key="inspection.XPST0003.predefined-entity.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0003.PredefinedEntityRefInspection"/>
    <localInspection language="XQuery" shortName="ReservedFunctionName" bundle="messages.XQueryBundle"
                     key="inspection.XPST0003.reserved-function-name.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0003.ReservedFunctionNameInspection"/>
    <localInspection language="XQuery" shortName="UnsupportedConstruct" bundle="messages.XQueryBundle"
                     key="inspection.XPST0003.unsupported-construct.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="WARNING"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0003.UnsupportedConstructInspection"/>

    <!-- XQST0017 -->
    <localInspection language="XQuery" shortName="UndefinedFunction" bundle="messages.XQueryBundle"
                     key="inspection.XPST0017.undefined-function.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="false" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0017.UndefinedFunctionInspection"/>

    <!-- XQST0031 -->
    <localInspection language="XQuery" shortName="UnsupportedXQueryVersion" bundle="messages.XQueryBundle"
                     key="inspection.XQST0031.unsupported-version.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xquery.XQST0031.UnsupportedXQueryVersionInspection"/>

    <!-- XQST0033 -->
    <localInspection language="XQuery" shortName="DuplicateNamespacePrefix" bundle="messages.XQueryBundle"
                     key="inspection.XQST0033.duplicate-namespace-prefix.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xquery.XQST0033.DuplicateNamespacePrefixInspection"/>

    <!-- XQST0047 -->
    <localInspection language="XQuery" shortName="DuplicateNamespaceUri" bundle="messages.XQueryBundle"
                     key="inspection.XQST0047.duplicate-namespace-uri.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xquery.XQST0047.DuplicateNamespaceUriInspection"/>

    <!-- XPST0081 -->
    <localInspection language="XQuery" shortName="UnboundQNamePrefix" bundle="messages.XQueryBundle"
                     key="inspection.XPST0081.unbound-qname-prefix.display-name" hasStaticDescription="true"
                     groupName="XQuery" enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.inspections.xpath.XPST0081.UnboundQNamePrefixInspection"/>

    <projectService serviceInterface="uk.co.reecedunn.intellij.plugin.xquery.settings.XQueryProjectSettings"
                    serviceImplementation="uk.co.reecedunn.intellij.plugin.xquery.settings.XQueryProjectSettings"/>
    <projectConfigurable groupId="language" displayName="XQuery" instance="uk.co.reecedunn.intellij.plugin.xquery.settings.XQueryProjectSettingsConfigurable"/>
  </extensions>

  <application-components>
  </application-components>

  <project-components>
  </project-components>

  <actions>
  </actions>
</idea-plugin>
