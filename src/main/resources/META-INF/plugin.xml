<idea-plugin>
  <id>uk.co.reecedunn.intellij.plugin.xquery</id>
  <!--suppress PluginXmlValidity -->
  <name>xquery-intellij-plugin</name>
  <version>VERSION</version>
  <vendor email="msclrhd@gmail.com" url="http://reecedunn.co.uk">Reece H. Dunn</vendor>

  <description><![CDATA[
    XQuery 1.0, 3.0, and 3.1 language support with error recovery and support
    for: Full Text 1.0, and 3.0; Update Facility 1.0, and 3.0; Scripting
    Extension 1.0. Supports the BaseX, MarkLogic 6.0 to 8.0, and Saxonica
    XQuery vendor extensions.
  ]]></description>

  <change-notes><![CDATA[
    <h3>Release 1.4-dev:</h3>
    <p>Bug Fixes:</p>
    <ol>
      <li>Fix an issue with run configuration settings not saving in IntelliJ 2018.3 and later.</li>
      <li>Don't highlight xqDoc tags in non-xqDoc comments.</li>
    </ol>
    <p>EXPath Syntax Extensions:</p>
    <ol>
      <li>Support the variadic function arguments proposal.</li>
    </ol>
    <p>XQuery:</p>
    <ol>
      <li>
        Fix parsing QNames in NameTests where the prefix is <code>attribute</code>,
        <code>element</code>, <code>every</code>, <code>exit</code>, <code>namespace</code>,
        <code>processing-instruction</code>, <code>return</code>, or <code>some</code>.
      </li>
      <li>
        Fix parsing NCNames in FunctionCalls and NameTests where the name is
        <code>some</code>, or <code>every</code>.
      </li>
      <li>
        Fix parsing  <code>``[`{...}`...`]``</code> -- <code>StringConstructorInterpolation</code>
        at the start of a <code>StringConstructor</code>.
      </li>
    </ol>
    <p>XSLT:</p>
    <ol>
      <li>Register the XSLT 3.0 schema with IntelliJ.</li>
    </ol>
    <p>Static Context:</p>
    <ol>
      <li>
        Add support for the eXist-db built-in functions and static context. Thanks
        to Bridger Dyson-Smith for providing the built-in function definitions.
      </li>
      <li>Add the <code>err</code> and <code>output</code> namespaces to the BaseX static context.</li>
    </ol>
    <p>Function Resolution:</p>
    <ol>
      <li>Correctly match functions with variadic function arguments.</li>
    </ol>
    <p>IntelliJ Integration:</p>
    <ol>
      <li>Display the first comment line when the comment is folded.</li>
      <li>Support profiling MarkLogic queries.</li>
      <li>Support configuring the namespace prefix colour.</li>
    </ol>
    <p>Inspections:</p>
    <ol>
      <li>XPST0017: Fix the arity check for variadic functions.</li>
      <li>XPST0118: Don't crash on code like <code>&lt;/&lt;test/&gt;</code>.</li>
    </ol>
  ]]></change-notes>

  <idea-version since-build="161"/>

  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.xml</depends>

  <extensionPoints>
    <extensionPoint qualifiedName="uk.co.reecedunn.intellij.importPathResolver" interface="uk.co.reecedunn.intellij.plugin.xpath.model.ImportPathResolver"/>
    <extensionPoint qualifiedName="uk.co.reecedunn.intellij.queryProcessorApi" interface="uk.co.reecedunn.intellij.plugin.processor.query.QueryProcessorApi"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <!-- XML Path Language Support -->

    <lang.ast.factory language="XMLPath" implementationClass="uk.co.reecedunn.intellij.plugin.xpath.parser.XPathASTFactory"/>
    <lang.parserDefinition language="XMLPath" implementationClass="uk.co.reecedunn.intellij.plugin.xpath.parser.XPathParserDefinition"/>

    <lang.syntaxHighlighterFactory language="XMLPath" implementationClass="uk.co.reecedunn.intellij.plugin.intellij.lexer.XPathSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="uk.co.reecedunn.intellij.plugin.intellij.settings.XPathColorSettingsPage"/>
    <annotator language="XMLPath" implementationClass="uk.co.reecedunn.intellij.plugin.xpath.annotation.QNameAnnotator"/>

    <lang.foldingBuilder language="XMLPath" implementationClass="uk.co.reecedunn.intellij.plugin.intellij.lang.foldable.FoldingBuilderImpl"/>

    <!-- XML Query Language Support -->

    <fileTypeFactory implementation="uk.co.reecedunn.intellij.plugin.intellij.fileTypes.XQueryFileType$Factory"/>

    <lang.ast.factory language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.parser.XQueryASTFactory"/>
    <lang.parserDefinition language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.parser.XQueryParserDefinition"/>
    <lang.findUsagesProvider language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.intellij.lang.findUsages.XQueryFindUsagesProvider"/>

    <lang.syntaxHighlighterFactory language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.intellij.lexer.XQuerySyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="uk.co.reecedunn.intellij.plugin.intellij.settings.XQueryColorSettingsPage"/>
    <annotator language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.annotation.QNameAnnotator"/>

    <lang.braceMatcher language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.lang.XQueryPairedBraceMatcher"/>
    <lang.commenter language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.xquery.lang.XQueryCommenter"/>
    <lang.foldingBuilder language="XQuery" implementationClass="uk.co.reecedunn.intellij.plugin.intellij.lang.foldable.FoldingBuilderImpl"/>

    <!-- XSLT Language Support -->

    <standardResourceProvider implementation="uk.co.reecedunn.intellij.plugin.intellij.javaee.XsltResourceProvider"/>

    <!--
    <multiHostInjector implementation="uk.co.reecedunn.intellij.plugin.intellij.lang.injection.XPathInXsltLanguageInjection"/>
    -->

    <!-- MarkLogic Server-Side JavaScript Language Support -->

    <fileTypeFactory implementation="uk.co.reecedunn.intellij.plugin.intellij.fileTypes.ServerSideJavaScriptFileType$Factory"/>

    <!-- References and Resolve -->

    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryUriLiteralPsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.psi.manipulator.XQueryUriLiteralManipulator"/>
    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryQNamePsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.psi.manipulator.XQueryQNameManipulator"/>
    <lang.elementManipulator forClass="uk.co.reecedunn.intellij.plugin.xquery.psi.impl.xquery.XQueryNCNamePsiImpl"
                             implementationClass="uk.co.reecedunn.intellij.plugin.xquery.psi.manipulator.XQueryNCNameManipulator"/>

    <!-- Inspections -->

    <localInspection language="XQuery" shortName="IJVS0001" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.ijvs.group-name" groupPath="XPath and XQuery"
                     key="inspection.ijvs.IJVS0001" hasStaticDescription="true"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.ijvs.IJVS0001"/>
    <localInspection language="XQuery" shortName="IJVS0002" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.ijvs.group-name" groupPath="XPath and XQuery"
                     key="inspection.ijvs.IJVS0002" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.ijvs.IJVS0002"/>
    <localInspection language="XQuery" shortName="IJVS0003" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.ijvs.group-name" groupPath="XPath and XQuery"
                     key="inspection.ijvs.IJVS0003" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.ijvs.IJVS0003"/>
    <localInspection language="XQuery" shortName="IJVS0004" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.ijvs.group-name" groupPath="XPath and XQuery"
                     key="inspection.ijvs.IJVS0004" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.ijvs.IJVS0004"/>
    <localInspection language="XQuery" shortName="IJVS0005" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.ijvs.group-name" groupPath="XPath and XQuery"
                     key="inspection.ijvs.IJVS0005" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.ijvs.IJVS0005"/>

    <localInspection language="XQuery" shortName="XPST0017" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xpst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xpst.XPST0017" hasStaticDescription="true"
                     enabledByDefault="false" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.xpst.XPST0017"/>
    <localInspection language="XQuery" shortName="XQST0031" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xqst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xqst.XQST0031" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.codeInspection.xqst.XQST0031"/>
    <localInspection language="XQuery" shortName="XQST0033" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xqst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xqst.XQST0033" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.codeInspection.xqst.XQST0033"/>
    <localInspection language="XQuery" shortName="XQST0047" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xqst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xqst.XQST0047" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.codeInspection.xqst.XQST0047"/>
    <localInspection language="XQuery" shortName="XPST0081" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xpst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xpst.XPST0081" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xpath.codeInspection.xpst.XPST0081"/>
    <localInspection language="XQuery" shortName="XQST0118" bundle="messages.XQueryPluginBundle"
                     groupKey="inspection.xqst.group-name" groupPath="XPath and XQuery"
                     key="inspection.xqst.XQST0118" hasStaticDescription="true"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="uk.co.reecedunn.intellij.plugin.xquery.codeInspection.xqst.XQST0118"/>

    <!-- Application / Project Settings -->

    <projectService serviceInterface="uk.co.reecedunn.intellij.plugin.intellij.settings.XQueryProjectSettings"
                    serviceImplementation="uk.co.reecedunn.intellij.plugin.intellij.settings.XQueryProjectSettings"/>
    <projectConfigurable groupId="language" displayName="XQuery" instance="uk.co.reecedunn.intellij.plugin.intellij.settings.XQueryProjectSettingsConfigurable"/>

    <applicationService serviceImplementation="uk.co.reecedunn.intellij.plugin.intellij.settings.QueryProcessors"/>

    <!-- Run/Debug Configurations -->

    <executor implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.executors.DefaultProfileExecutor"/>

    <programRunner implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.runners.QueryProcessorRunner"/>
    <programRunner implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.runners.QueryProcessorDebugger"/>
    <programRunner implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.runners.QueryProcessorProfiler"/>

    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.ServerSideJavaScriptConfigurationType"/>
    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.SPARQLConfigurationType"/>
    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.SQLConfigurationType"/>
    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.XPathConfigurationType"/>
    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.XQueryConfigurationType"/>
    <configurationType implementation="uk.co.reecedunn.intellij.plugin.intellij.execution.configurations.type.XSLTConfigurationType"/>
  </extensions>

  <extensions defaultExtensionNs="uk.co.reecedunn.intellij">
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.xquery.model.Annotations"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.expath.model.BuiltInFunctions"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.exquery.model.BuiltInFunctions"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.w3.model.BuiltInFunctions"/>

    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.basex.model.BuiltInFunctions"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.existdb.model.BuiltInFunctions"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.marklogic.model.BuiltInFunctions"/>
    <importPathResolver implementation="uk.co.reecedunn.intellij.plugin.saxon.model.BuiltInFunctions"/>

    <queryProcessorApi implementation="uk.co.reecedunn.intellij.plugin.basex.query.session.BaseXSession"/>
    <queryProcessorApi implementation="uk.co.reecedunn.intellij.plugin.existdb.query.rest.EXistDBRest"/>
    <queryProcessorApi implementation="uk.co.reecedunn.intellij.plugin.marklogic.query.rest.MarkLogicRest"/>
    <queryProcessorApi implementation="uk.co.reecedunn.intellij.plugin.saxon.query.s9api.SaxonS9API"/>
  </extensions>
</idea-plugin>
